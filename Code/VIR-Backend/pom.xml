<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.vir</groupId>
	<artifactId>VIR-Backend</artifactId>
	<version>0.0.29-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>VIR-Backend</name>
	<description>Backend service which facilitates learning of new languages through analysis of text and gathering of data which is then displayed to the user.</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.6.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<!-- General properties -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>

		<!-- Versions properties -->
		<commons-lang3.version>3.4</commons-lang3.version>
		<swager.version>2.7.0</swager.version>
		<thucydides-core.version>0.9.275</thucydides-core.version>
		<tika.version>1.16</tika.version>
		<jasypt.starter.version>1.16</jasypt.starter.version>
		<opencsv.version>3.3</opencsv.version>
		<imageio.version>2.0</imageio.version>
		<imageio-core.version>1.3.1</imageio-core.version>
		<imageio-jpeg2000.version>1.3.0</imageio-jpeg2000.version>
		<tess4j.version>3.4.1</tess4j.version>
		<opencv.version>3.2.0-1</opencv.version>

		<!-- AWS bundling properties -->
		<bundle.dir>${basedir}/bundle</bundle.dir>
		<target.jar>${project.build.directory}/${project.build.finalName}.jar</target.jar>
		<bundle.jar>${bundle.dir}/${project.build.finalName}.jar</bundle.jar>
		<release.bundle.zip>${basedir}/release/bundle-${project.build.finalName}.zip</release.bundle.zip>
		<procfile.file>${bundle.dir}/Procfile</procfile.file>
		<procfile.contents>web: java -jar ${project.build.finalName}.jar</procfile.contents>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.tomcat</groupId>
					<artifactId>tomcat-jdbc</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.ulisesbocchio</groupId>
			<artifactId>jasypt-spring-boot-starter</artifactId>
			<version>${jasypt.starter.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swager.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swager.version}</version>
		</dependency>
		<dependency>
			<groupId>net.thucydides</groupId>
			<artifactId>thucydides-core</artifactId>
			<version>${thucydides-core.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-parsers</artifactId>
			<version>${tika.version}</version>
		</dependency>
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>${opencsv.version}</version>
		</dependency>
		<dependency>
			<groupId>com.levigo.jbig2</groupId>
			<artifactId>levigo-jbig2-imageio</artifactId>
			<version>${imageio.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.jai-imageio</groupId>
			<artifactId>jai-imageio-core</artifactId>
			<version>${imageio-core.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.jai-imageio</groupId>
			<artifactId>jai-imageio-jpeg2000</artifactId>
			<version>${imageio-jpeg2000.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.tess4j</groupId>
			<artifactId>tess4j</artifactId>
			<version>${tess4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openpnp</groupId>
			<artifactId>opencv</artifactId>
			<version>${opencv.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<activatedProperties>dev</activatedProperties>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<activatedProperties>prod</activatedProperties>
			</properties>

			<!-- Create the production bundle -->
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>install</phase>
								<configuration>
									<target>
										<echo message="Prepearing the bundle..." />
										<delete>
											<fileset dir="${bundle.dir}">
												<include name="*.jar" />
											</fileset>
										</delete>
										<copy toFile="${bundle.jar}" file="${target.jar}" />
										<echo file="${procfile.file}">${procfile.contents}</echo>
										<zip compress="false" destfile="${release.bundle.zip}"
											basedir="${bundle.dir}" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
